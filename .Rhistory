<<<<<<< HEAD
print(i)
for (i in 10)
print(i)
for (i in 0:10)
print(i)
summary <- glm(conc ~ nwell,family = poisson(link = log), data = well.data)
file = 'Data/wells.txt'
well.data <- read.table(file, header = TRUE, sep = "", dec = ".")
summary <- glm(conc ~ nwell,family = poisson(link = log), data = well.data)
file = 'Data/wells.txt'
well.data <- read.table(file, header = TRUE, sep = "", dec = ".")
summary <- glm(conc ~ nwell,family = poisson(link = log), data = well.data)
file = 'Data/wells.txt'
well.data <- read.table(file, header = TRUE, sep = "", dec = ".")
summary <- glm(conc ~ nwell,family = poisson(link = log), data = well.data)
summary
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
fblad1 <- fblad[c(15:549), ]
N <- length(fblad1$events)
p.hat <- sum(fblad1$events/N)
# sæt en formel til glm
var <- fblad1$conc
analysis<-glm(events~var,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
=======
>>>>>>> origin/JoachimBranch
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
<<<<<<< HEAD
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
lines(var,prediction.data$lower, col="red")
lines(var,prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad1$events[i1]/fblad1$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
points(var[i1],p1,col="green")
## Se info om data
?airquality
## Indlæs data
Air <- airquality
head(Air)
## Fjern rækker hvor der er mindst en NA værdi
Air <- Air[!apply(is.na(Air), 1, any), ]
## Se lige på empirisk tæthedsfunktion
hist(Air$Ozone, probability=TRUE, xlab="Ozon", main="")
## Koncentrationer er positive og meget højre-skæv fordeling, derfor log transformer
Air$logOzone <- log(Air$Ozone)
## Bedre epdf?
hist(Air$logOzone, probability=TRUE, xlab="log Ozon", main="")
# Hvad er der i Air?
head(Air)
tail(Air)
str(Air)
plot(Air[,c("Ozone","Solar.R","Wind","Temp","Month")])
pairs(Air, panel = panel.smooth, main = "airquality data")
##################################################
# Forste fit (ikke transformerede)
fit1 <- lm(Ozone ~ Temp, data = Air)
summary(fit1)
par(mfrow=c(1,3))
qqnorm(fit1$residuals)
qqline(fit1$residuals)
plot(fit1$fitted,fit1$residuals)
hist(fit1$residuals)
##################################################
# Fit 2 (log transformeret)
fit2 <- lm(logOzone ~ Temp, data = Air)
summary(fit2)
par(mfrow=c(2,2))
qqnorm(fit2$residuals)
qqline(fit2$residuals)
plot(fit2$fitted,fit2$residuals,pch=19)
hist(fit2$residuals)
plot(fit2$residuals,pch=19,xlab="Time")
# Vurdering af uafhængighed
par(mfrow=c(1,1))
n <- length(fit2$residuals)
plot(fit2$residuals[-1],fit2$residuals[-n])
cor(fit2$residuals[-1],fit2$residuals[-n])
## Kunne vi bruge andre forklarende variable?
pairs(cbind(fit2$residuals,Air[,c("Solar.R","Wind","Temp")]),
panel = panel.smooth)
round(cor(cbind(fit2$residuals,Air[,c("Solar.R","Wind","Temp")])),digits=3)
## Ny model
fit3 <- lm(logOzone ~ Temp + Solar.R, data = Air)
summary(fit3)
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
fblad1 <- fblad[c(15:549), ]
N <- length(fblad1$events)
p.hat <- sum(fblad1$events/N)
# sæt en formel til glm
conc <- fblad1$conc
analysis<-glm(events~conc,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
age <- fblad1$age
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
pop <- fblad1$at.risk
pop <- fblad1$at.risk
analysis<-glm(events~conc + age + pop,family=poisson(link=log),data=fblad1)
# sæt en formel til glm
conc <- fblad1$conc
age <- fblad1$age
pop <- fblad1$at.risk
analysis<-glm(events~conc + age + pop,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
events123 <- fblad1$events
analysis<-glm(events~conc + age + pop,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
analysis<-glm(events~conc + age + pop + events123,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# sæt en formel til glm
conc <- fblad1$conc
age <- fblad1$age
pop <- fblad1$at.risk
analysis<-glm(events~conc + age + pop + sqrt(conc),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
lines(var,prediction.data$lower, col="red")
lines(var,prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad1$events[i1]/fblad1$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
points(var[i1],p1,col="green")
analysis<-glm(events~conc + age + sqrt(conc),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
lines(var,prediction.data$lower, col="red")
lines(var,prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad1$events[i1]/fblad1$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
analysis<-glm(events~conc + age + sqrt(conc),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
lines(var,prediction.data$lower, col="red")
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
prediction.data.original<-invlogit(prediction.data)
prediction.data.original<-invlog(prediction.data)
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
fblad1 <- fblad[c(15:549), ]
N <- length(fblad1$events)
p.hat <- sum(fblad1$events/N)
# sæt en formel til glm
conc <- fblad1$conc
age <- fblad1$age
pop <- fblad1$at.risk
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
=======
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Her defineres modellen:
analysis<-glm(events~conc+age,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc+age + log(at.risk),family=poisson(link=log),data=fblad)
summary(analysis)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
>>>>>>> origin/JoachimBranch
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
<<<<<<< HEAD
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
lines(var,prediction.data$lower, col="red")
lines(var,prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad1$events[i1]/fblad1$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
points(var[i1],p1,col="green")
lines(var,prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad1$events[i1]/fblad1$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
?glm
??glm
?glm
okay
2+2
123+123+123
123*3
123*5
123*6
123*
8
123*8
123*8,2
123*8.2
123*8.1
123*8.15
123*8.12
123*8.123
123*8.123123
123*8.123123123123123123123123123123123123123
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
=======
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
?glm
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad)
summary(analysis)
>>>>>>> origin/JoachimBranch
head(fblad)
# Her defineres modellen:
<<<<<<< HEAD
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\Arsenik_i_vand\\Data")
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\Arsenik i vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
=======
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+sqrt(at.risk))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
>>>>>>> origin/JoachimBranch
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad)
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
<<<<<<< HEAD
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
source('C:/Users/User/OneDrive - Danmarks Tekniske Universitet/SAS_030919/4. Semester/42584_Fagprojekt/Arsenik i drikkevand/42584_Data/Arsenik i vand/R/Analyse.r', encoding = 'UTF-8', echo=TRUE)
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
=======
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
>>>>>>> origin/JoachimBranch
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
<<<<<<< HEAD
# Her defineres modellen:
analysis<-glm(events~conc^2+age^2,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
analysis<-glm(events~conc^2+age^2,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\Arsenik i vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
analysis<-glm(events~conc^2+age^2,family=poisson(link=log),data=fblad,offset=log(at.risk))
=======
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
>>>>>>> origin/JoachimBranch
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
<<<<<<< HEAD
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
=======
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
>>>>>>> origin/JoachimBranch
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
<<<<<<< HEAD
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
=======
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Frederik wd
#setwd("C:\\Users\\frede\\OneDrive\\Dokumenter\\DTU\\4. Semester\\Fagprojekt\\ArsenikGit\\Data")
# Asger wd
#setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i vand/Data")
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
#Oskar wd
# setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
#fblad <- fblad[c(15:549), ]
>>>>>>> origin/JoachimBranch
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
<<<<<<< HEAD
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
=======
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
>>>>>>> origin/JoachimBranch
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# analysis3 <- update(analysis2, ~.-I(conc^2))
# summary(analysis3)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
<<<<<<< HEAD
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
source('C:/Users/User/OneDrive - Danmarks Tekniske Universitet/SAS_030919/4. Semester/42584_Fagprojekt/Arsenik i drikkevand/42584_Data/Arsenik i vand/R/Analyse.r', encoding = 'UTF-8', echo=TRUE)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
=======
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
>>>>>>> origin/JoachimBranch
# Her defineres modellen:
analysis<-glm(events~log(1+conc) + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
<<<<<<< HEAD
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~sqrt(conc)+age,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(sqrt(conc)^2)+I(age^2))
=======
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
>>>>>>> origin/JoachimBranch
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
<<<<<<< HEAD
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
cbind(fblad$events[order(fblad$events, decreasing = TRUE)],round(prediction.data.original$pred,1))
plot(fblad$events[order(fblad$events, decreasing = TRUE)],round(prediction.data.original$pred,2), xlim=c(0, 25), ylim=c(0, 25))
fblad$events[order(fblad$events, decreasing = TRUE)]
R--help
R --help
head(blad)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
blad <- rbind(fblad,mblad)
head(blad)
#Oskar wd
setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\Arsenik i vand\\Data")
=======
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Her defineres modellen:
analysis<-glm(events~log(1+conc) + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
set.seed(69)
>>>>>>> origin/JoachimBranch
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
blad <- rbind(fblad,mblad)
head(blad)
# Antal observationer
N <- length(blad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(blad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc+age,family=poisson(link=log),data=blad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
<<<<<<< HEAD
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(1/2*conc^2)+I(1/2*age^2))
analysis2 <- update(analysis2, ~.+I(1/3*conc^3))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(1/2*conc^2)+I(1/2*age^2))
summary(analysis2)
analysis2 <- update(analysis2, ~.+I(1/3*conc^3))
summary(analysis2)
analysis2 <- update(analysis2, ~.+I(1/3*conc^3))
=======
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, blad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, blad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, blad$events[order(prediction.data.original$pred)], col="red")
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
cbind(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,1))
plot(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,0))
#plot i log transformation
plot(prediction.data$pred, blad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, blad$events, col="red")
lines(prediction.data$upper, blad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(blad$events/blad$at.risk))
# Data til histogrammet oven over
cbind(blad[blad$events>4,] ,log(blad$events/blad$at.risk)[blad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(1/2*conc^2)+I(1/2*age^2))
analysis2 <- update(analysis2, ~.+I(1/3*conc^3))
>>>>>>> origin/JoachimBranch
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
<<<<<<< HEAD
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
cbind(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,1))
plot(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,2), xlim=c(0, maxr), ylim=c(0, maxr))
maxr <- 85
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
cbind(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,1))
plot(blad$events[order(blad$events, decreasing = TRUE)],round(prediction.data.original$pred,2), xlim=c(0, maxr), ylim=c(0, maxr))
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
blad$events[order(blad$events, decreasing = TRUE)]
=======
maxr <- 5
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
maxr <- 25
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
maxr <- 100
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
>>>>>>> origin/JoachimBranch
#plot i log data
plot(prediction.data$pred, blad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, blad$events, col="red")
lines(prediction.data$upper, blad$events, col="red")
<<<<<<< HEAD
=======
maxr <- 100
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
maxr <- 5
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
git config --global user.email "joachimpors@hotmail.com"
git config
git.config
git
git?
config
global user.email "you@example.com"
git init
git git
git config
run
run git commit
>>>>>>> origin/JoachimBranch
