length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals, ylim=c(-10, 20))
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female)+s(age,conc)+
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
maxr <- 150
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals)
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
maxr <- 150
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals)
plot(analysis$residuals, ylim=c(-10, 20))
plot(analysis$fitted.values, analysis$residuals)
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
summary(analysis2)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
summary(analysis)
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
maxr <- 150
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals)
plot(analysis$residuals, ylim=c(-10, 20))
plot(analysis$fitted.values, analysis$residuals)
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)]
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)]
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>4]
blad$events[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>4]
blad[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>4,]
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>4])
blad[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6,]
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6])
exp(analysis[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6],)
exp(analysis[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6])
exp(analysis[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6], )
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6])
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, (blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group)
exp(analysis[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6],)
exp(analysis[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6])
blad[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6,]
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6]
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>6])
plot(analysis$fitted.values, exp((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values),col=blad$group))
plot(analysis$fitted.values, exp((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
plot(analysis$fitted.values, exp((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10])
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10]
blad[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10,]
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
blad[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10,]
analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10]
exp(analysis$fitted.values[(blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)>10])
AIC(analysis)
summary(analysis)
analysis
gam.check(analysis)
gam.control(analysis)
gam.control(2)
gam.control(analysis)
gam.check(analysis)
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group,xlim=c(0,10))
plot(analysis$fitted.values, exp((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group,xlim=c(0,10))
plot(analysis$fitted.values, exp((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group,xlim=c(0,10), ylim=c(0,10))
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group,xlim=c(0,10), ylim=c(0,10))
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group,xlim=c(0,10))
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
analysis$smooth
analysis$smooth[[1]]
analysis$coefficients
plot(analusy)
plot(analysis)
plot(analusy)
plot(analysis)
library("mgcv")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
analysis$coefficients
analysis$linear.predictors
analysis$weights
analysis$control
analysis$coefficients
analysis
plot(analysis, shade = TRUE)
plot(analysis, shade = TRUE)
analysis$optimizer
analysis$optimizer
summary(analysis)$r.sq
summary(analysis)
ggplot(analysis)
library(ggplot2)
library("ggplot2")
ggplot(analysis)
ggplot(analysis$fitted.values)
ggplot?
?
<
??ggplot
ggplot(blad$events, prediction.data.original)
??aes
ggplot(blad$events, aes(prediction.data.original))
ggplot(blad, aes(prediction.data.original))
length(prediction.data.original)
length(prediction.data.original)
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
length(prediction.data.original)
length(prediction.data.original$pred)
ggplot(blad, aes(prediction.data.original$pred))
ggplot(blad, aes(1,prediction.data.original$pred))
ggplot(blad, aes(blad,prediction.data.original$pred))
ggplot(blad, aes(blad$events,prediction.data.original$pred))
ggplot(blad, aes(blad$events,prediction.data$pred))
ggplot(blad, aes(blad$events,prediction.data.original$pred))
ggplot(blad, aes(blad$events,prediction.data$pred))
ggplot(blad, aes(blad$events,prediction.data.original$pred))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point()
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() +geom_smooth(method = gam)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam)
library("mgcv")
library("ggplot2")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
a# plots i original data transformation
maxr <- 150
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals)
plot(analysis$residuals, ylim=c(-10, 20))
plot(analysis$fitted.values, analysis$residuals)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam)
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
plot(x, v, xlim=c(0, maxr), ylim = c(0,maxr))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = y ~s(x))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk)))
)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = y ~s(x))
offset(I(log(at.risk)))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk))))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk))))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk))))
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$village1 +
offset(I(log(blad$at.risk))))
library("mgcv")
library("ggplot2")
# Asger wd
setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
set.seed(69)
fblad <- read.table("fblad.sw.dat", header=TRUE)
mblad <- read.table("mblad.sw.dat", header=TRUE)
fblad$gender <- "Female"
mblad$gender <- "Male"
fblad$female <- 1
mblad$female <- 0
blad <- rbind(fblad,mblad)
blad$village1 <- 1*(blad$group == 1)
N <- length(blad$events)
analysis <- gam(events~s(age)+s(log(1+conc))+s(age,by=female) + gender*village1 +
offset(I(log(at.risk))),
family=poisson(link = "log"),
data=blad)
# AIC
AIC(analysis)
plot(analysis)
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(blad$events, decreasing = TRUE),]
plot(analysis$fitted.values, ((blad$events - analysis$fitted.values)/sqrt(analysis$fitted.values)),col=blad$group)
a# plots i original data transformation
maxr <- 150
# Laver foreløbig test, tror det her er den rigtige måde at plotte det på
plot(round(prediction.data.original$pred,2),blad$events[order(blad$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr))
lines(0:maxr,0:maxr, type="l")
v = vector()
x = vector()
blad$events<- blad$events[order(blad$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(blad$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v,res)
x = c(x, 0.1*i)
}
sd.Pred <- sd(prediction.data.original$pred)
length(prediction.data.original$upper)
lines(0:maxr,0:maxr, type="l")
lines(0:maxr+sd.Pred,0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred,0:maxr, type="l", col = "red")
plot(analysis$residuals)
plot(analysis$residuals, ylim=c(-10, 20))
plot(analysis$fitted.values, analysis$residuals)
ggplot(blad, aes(blad$events,prediction.data.original$pred)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk))))
ggplot(blad, aes(events,conc)) + geom_point() + geom_smooth(method = gam)
ggplot(blad, aes(events,conc)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk)))))
ggplot(blad, aes(events,conc)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 +
offset(I(log(blad$at.risk))))
ggplot(blad, aes(events,conc)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 + offset(I(log(blad$at.risk))))
update.packages()
y
ggplot(blad, aes(events,conc)) + geom_point() + geom_smooth(method = gam, formula = blad$events~s(blad$age)+s(log(1+blad$conc))+s(blad$age,by=blad$female) + blad$gender*blad$village1 + offset(I(log(blad$at.risk))))
