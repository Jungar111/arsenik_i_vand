okay
2+2
123+123+123
123*3
123*5
123*6
123*
8
123*8
123*8,2
123*8.2
123*8.1
123*8.15
123*8.12
123*8.123
123*8.123123
123*8.123123123123123123123123123123123123123
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
220+2
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad1)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad1)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(var,prediction.data$pred, col="blue")
# Her defineres modellen:
model <- conc + age + log(at.risk)
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
# plots i log transformation
plot(model,prediction.data$pred, col="blue")
# Her defineres modellen:
model <- conc + age + log(at.risk)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad$events[i1]/fblad$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
points(var[i1],p1,col="green")
# plots i log transformation
plot(fblad$conc + fblad$age + log(fblad$at.risk),prediction.data$pred, col="blue")
lines(fblad$conc + fblad$age + log(fblad$at.risk),prediction.data$lower, col="red")
lines(fblad$conc + fblad$age + log(fblad$at.risk),prediction.data$upper, col="red")
#index for undersøgelses punkt
i1 <- 255
# sandsynlighhed for at få kræft i indexpunktet
p1 <- fblad$events[i1]/fblad$at.risk[i1]*100
#plot af sandsynlighed for kræft i orginal data
plot(prediction.data.original$pred,var)
lines(prediction.data.original$lower,var, col="red")
lines(prediction.data.original$upper,var, col="red")
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc+age,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original<-exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
hist(log(fblad$events/fblad$at.risk))
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
x <- [64,68,54,45,41,44,29,38,39,33,36,34,24,24,32,26,34,32,24,24]
x <- (64,68,54,45,41,44,29,38,39,33,36,34,24,24,32,26,34,32,24,24)
x <- {64,68,54,45,41,44,29,38,39,33,36,34,24,24,32,26,34,32,24,24}
x <- c(64,68,54,45,41,44,29,38,39,33,36,34,24,24,32,26,34,32,24,24)
y <- c(79,57,50,44,41,40,40,39,37,37,36,34,33,31,28,26,25,24,24,18)
plot(x,y)
?plot
plot(x,y, xlab="#Points = Number of points", ylab="GF = Goals for", main="Premier League MF vs. #Points")
plot(x,y, xlab="#Points = Number of points", ylab="GF = Goals for", main="Premier League GF vs. #Points")
?plopt
plot
?plot
?regression
model <- lm(x,y)
model <- lm(x~y)
predict(model)
model <- lm(x~y)
predict(model)
lines(model)
x <- c(64,68,54,45,41,44,29,38,39,33,36,34,24,24,32,26,34,32,24,24)
y <- c(79,57,50,44,41,40,40,39,37,37,36,34,33,31,28,26,25,24,24,18)
plot(x,y, xlab="#Points = Number of points", ylab="GF = Goals for", main="Premier League GF vs. #Points")
summary(model)
trendline(x,y)
trendline(x, y, model = "line2P", plot = TRUE, linecolor = "red",
lty = 1, lwd = 1, summary = TRUE, ePos = "topleft", eDigit = 5,
eSize = 1)
?trendline
?trendline()
?trend
?line
line(x, y, model = "line2P", plot = TRUE, linecolor = "red",
lty = 1, lwd = 1, summary = TRUE, ePos = "topleft", eDigit = 5,
eSize = 1)
line(x, y)
plot(line(x, y))
plot(x,y, xlab="#Points = Number of points", ylab="GF = Goals for", main="Premier League GF vs. #Points")
line(x, y)
abline(y~x)
abline(y~x, col="blue")
plot(x,y, xlab="#Points = Number of points", ylab="GF = Goals for", main="Premier League GF vs. #Points")
abline(y~x, col="blue")
?abline
line(x,y)
line(x,y)[1]
line(x,y)
abline(y~x, col="blue")
abline(4.60, 0.85, col="blue")
.gitignore
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
fblad <- read.table("fblad.sw.dat", header=TRUE)
head(fblad)
# Antal observationer
N <- length(fblad$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(fblad$events/N)
# Her defineres modellen:
analysis<-glm(events~conc+age,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Her defineres modellen:
analysis<-glm(events~conc+age,family=poisson(link=log),data=fblad,offset=log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc+age + log(at.risk),family=poisson(link=log),data=fblad)
summary(analysis)
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
?glm
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc + age + log(at.risk),family=poisson(link=log),data=fblad)
summary(analysis)
head(fblad)
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+sqrt(at.risk))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk)^2)
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+I(at.risk^2))
summary(analysis2)
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad)
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events, col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events, col="red")
lines(prediction.data.original$upper, fblad$events, col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2)+at.risk)
summary(analysis2)
analysis3 <- update(analysis2, ~.-I(conc^2))
summary(analysis3)
# Hvor god er modellen
drop1(analysis3, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis3,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Her defineres modellen:
analysis<-glm(events~conc + age,family=poisson(link=log),data=fblad, offset = log(at.risk))
summary(analysis)
# Hvor god er modellen
drop1(analysis, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(prediction.data.original$pred),]
# Sorterede plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(prediction.data.original$pred)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(prediction.data.original$pred)], col="red")
lines(prediction.data.original$upper, fblad$events[order(prediction.data.original$pred)], col="red")
#plot i log transformation
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# Histogram over log transformeret procent for at få kræft
hist(log(fblad$events/fblad$at.risk))
# Data til histogrammet oven over
cbind(fblad[fblad$events>4,] ,log(fblad$events/fblad$at.risk)[fblad$events > 4])
# Taylor udvider til ny analysis
analysis2 <- update(analysis, ~.+I(conc^2)+I(age^2))
summary(analysis2)
# Hvor god er modellen
drop1(analysis2, test="Chisq")
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis2,se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(fblad$events, decreasing = TRUE),]
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events, col="red")
lines(prediction.data$upper, fblad$events, col="red")
#plot i log data
plot(prediction.data$pred, fblad$events[order(prediction.data$pred)], col="blue")
lines(prediction.data$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
# plots i original data transformation
plot(prediction.data.original$pred, fblad$events[order(fblad$events, decreasing = TRUE)], col="blue")
lines(prediction.data.original$lower, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
lines(prediction.data.original$upper, fblad$events[order(fblad$events, decreasing = TRUE)], col="red")
