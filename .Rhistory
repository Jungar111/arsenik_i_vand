par(mfrow=c(1,2))
plot(analysis$residuals, col=lun$group)
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group)
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group)
par(mfrow=c(1,1))
plot(analysis$residuals, col=lun$group)
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group)
par(mfrow=c(1,1))
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group)
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group)
par(mfrow=c(1,1))
?title
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, title(main = "Indbygget R funktion"))
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group)
?title
plot(analysis$residuals, col=lun$group, title(main = "Indbygget R funktion"))
par(mfrow=c(1,1))
plot(analysis$residuals, col=lun$group, title(main = "Indbygget R funktion"))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age)+s(age,by=female)+s(conc)+gender*village1+s(conc,age)+offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age)+s(age,by=female)+s(conc)+gender*village1+s(age,conc)+offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age)+s(age,by=female)+s(conc)+gender*village1+offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age)+s(age,by=male)+s(conc)+gender*village1+offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age)+s(age,by=female)+s(conc)+gender*village1+offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
head(lun)
head(lun[35])
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
plot(analysis$fitted.values[5,600], (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
analysis$fitted.values
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning", xlim=(5,600)
?xlim
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning", xlim=(5,600))
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning", xlim=(5))
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning", xlim=(600))
?plot
?xlim
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning", xlim=[5,600])
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc)
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age,conc) + s(age,by=female) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female)
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
+ s(conc) + gender*village1
+ s(conc) + gender*village1
+ s(conc) + gender*village1
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + + s(conc, by=female) gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + + s(conc, by=female)+ gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) +gender + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + I(gender) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
par(mfrow=c(1,1))
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis, se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(lun$events, decreasing = TRUE), ]
maxr <- 607
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
sd.Pred <- sd(prediction.data.original$pred[0:maxr])
lines(0:maxr+sd.Pred, 0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred, 0:maxr, type="l", col = "red")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v, res)
x = c(x, 0.1*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
############### INDLÆSNING AF LUNGE DATA #################
flun <- read.table("flun.txt", header=TRUE)
mlun <- read.table("mlun.txt", header=TRUE)
flun$gender <- "Female"
mlun$gender <- "Male"
flun$female <- 1
mlun$female <- 0
lun <- rbind(flun,mlun)
lun$village1 <- 1*(lun$group == 1)
# Antal observationer
N <- length(lun$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(lun$events/N)
head(lun)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
par(mfrow=c(1,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis, se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(lun$events, decreasing = TRUE), ]
maxr <- 607
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
sd.Pred <- sd(prediction.data.original$pred[0:maxr])
maxr <- 5
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
maxr <- 2
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
lines(0:maxr+sd.Pred, 0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred, 0:maxr, type="l", col = "red")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v, res)
x = c(x, 0.1*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
maxr <- 10
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
sd.Pred <- sd(prediction.data.original$pred[0:maxr])
lines(0:maxr+sd.Pred, 0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred, 0:maxr, type="l", col = "red")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v, res)
x = c(x, 0.1*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
maxr <- 2
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
sd.Pred <- sd(prediction.data.original$pred[0:maxr])
lines(0:maxr+sd.Pred, 0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred, 0:maxr, type="l", col = "red")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v, res)
x = c(x, 0.1*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
library(mgcv)
# Frederik wd
#setwd("C:\\Users\\frede\\OneDrive\\Dokumenter\\DTU\\4. Semester\\Fagprojekt\\ArsenikGit\\Data")
# Asger wd
#setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
#Oskar wd
# setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
set.seed(69)
############### INDLÆSNING AF LUNGE DATA #################
flun <- read.table("flun.txt", header=TRUE)
mlun <- read.table("mlun.txt", header=TRUE)
flun$gender <- "Female"
mlun$gender <- "Male"
flun$female <- 1
mlun$female <- 0
lun <- rbind(flun,mlun)
lun$village1 <- 1*(lun$group == 1)
# Antal observationer
N <- length(lun$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(lun$events/N)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis, se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(lun$events, decreasing = TRUE), ]
maxr <- 607
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
maxr <- 2
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.1*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.1*i])
v = c(v, res)
x = c(x, 0.1*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
library(mgcv)
# Frederik wd
#setwd("C:\\Users\\frede\\OneDrive\\Dokumenter\\DTU\\4. Semester\\Fagprojekt\\ArsenikGit\\Data")
# Asger wd
#setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
#Oskar wd
# setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
set.seed(69)
############### INDLÆSNING AF LUNGE DATA #################
flun <- read.table("flun.txt", header=TRUE)
mlun <- read.table("mlun.txt", header=TRUE)
flun$gender <- "Female"
mlun$gender <- "Male"
flun$female <- 1
mlun$female <- 0
lun <- rbind(flun,mlun)
lun$village1 <- 1*(lun$group == 1)
# Antal observationer
N <- length(lun$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(lun$events/N)
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
################ General Additive Model / GLM / Model-definering ###################
analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender, family=poisson(link= "log"), data=lun, offset=log(at.risk))
# analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
#                 + offset(I(log(at.risk))),
#                 family=poisson(link = "log"),
#                 data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
analysis <- glm(events~ age + I(age^2) + I(sqrt(conc)) + gender*village1, family=poisson(link= "log"), data=lun, offset=log(at.risk))
# analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
#                 + offset(I(log(at.risk))),
#                 family=poisson(link = "log"),
#                 data=lun)
summary(analysis)
AIC(analysis)
################ General Additive Model / GLM / Model-definering ###################
analysis <- glm(events~ age + I(age^2) + I((conc)) + gender*village1, family=poisson(link= "log"), data=lun, offset=log(at.risk))
# analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
#                 + offset(I(log(at.risk))),
#                 family=poisson(link = "log"),
#                 data=lun)
summary(analysis)
################ General Additive Model / GLM / Model-definering ###################
analysis <- glm(events~ age + I(age^2) + conc + gender*village1, family=poisson(link= "log"), data=lun, offset=log(at.risk))
# analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
#                 + offset(I(log(at.risk))),
#                 family=poisson(link = "log"),
#                 data=lun)
summary(analysis)
AIC(analysis)
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.01*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.01*i])
v = c(v, res)
x = c(x, 0.01*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
res <- mean(lun$events[0.05*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.05*i])
v = c(v, res)
x = c(x, 0.05*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
library(mgcv)
# Frederik wd
#setwd("C:\\Users\\frede\\OneDrive\\Dokumenter\\DTU\\4. Semester\\Fagprojekt\\ArsenikGit\\Data")
# Asger wd
#setwd("/Users/AsgerSturisTang/OneDrive - Danmarks Tekniske Universitet/DTU/4. Semester/Arsenik i GIT/Data")
# Joachim wd
setwd("/Users/JoachimPorsA/Documents/4. Semester - DTU/Fagprojekt/Data/Arsenik i vand/Data")
#Oskar wd
# setwd("C:\\Users\\User\\OneDrive - Danmarks Tekniske Universitet\\SAS_030919\\4. Semester\\42584_Fagprojekt\\Arsenik i drikkevand\\42584_Data\\arsenik_i_vand\\Data")
set.seed(69)
############### INDLÆSNING AF LUNGE DATA #################
flun <- read.table("flun.txt", header=TRUE)
mlun <- read.table("mlun.txt", header=TRUE)
flun$gender <- "Female"
mlun$gender <- "Male"
flun$female <- 1
mlun$female <- 0
lun <- rbind(flun,mlun)
lun$village1 <- 1*(lun$group == 1)
# Antal observationer
N <- length(lun$events)
# p.hat (empirisk sandsynlighed)
p.hat <- sum(lun$events/N)
################ General Additive Model / GLM / Model-definering ###################
analysis <- glm(events~ age + I(age^2) + conc + gender*village1, family=poisson(link= "log"), data=lun, offset=log(at.risk))
# analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
#                 + offset(I(log(at.risk))),
#                 family=poisson(link = "log"),
#                 data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
################ General Additive Model / GLM / Model-definering ###################
# analysis <- glm(events~ age + I(age^2) + conc + gender*village1, family=poisson(link= "log"), data=lun, offset=log(at.risk))
analysis <- gam(events~s(age) + s(age,by=female) + s(conc) + gender*village1
+ offset(I(log(at.risk))),
family=poisson(link = "log"),
data=lun)
summary(analysis)
AIC(analysis)
# RESIDUAL PLOT ---> Først indbygget funktion, herefter manuel!
par(mfrow=c(2,1))
plot(analysis$residuals, col=lun$group, main = "Indbygget R funktion")
plot(analysis$fitted.values, (lun$events - analysis$fitted.values) / sqrt(analysis$fitted.values), col=lun$group, main = "Manuel beregning")
par(mfrow=c(1,1))
# Laver signifikans niveauer
prediction.temp<-as.data.frame(predict(analysis, se.fit=T))
prediction.data<-data.frame(pred=prediction.temp$fit, upper=prediction.temp$fit+ 1.96*prediction.temp$se.fit, lower=prediction.temp$fit-1.96*prediction.temp$se.fit)
# Transformerer dataen tilbage til original tilstand og sorterer data efter pred
prediction.data.original <- exp(prediction.data)
prediction.data.original <- prediction.data.original[order(lun$events, decreasing = TRUE), ]
maxr <- 2
# PLOTTETID
plot(round(prediction.data.original$pred, digits=2), lun$events[order(lun$events, decreasing = TRUE)], xlim=c(0, maxr), ylim=c(0, maxr), xlab="Predicted events", ylab="Actual events")
lines(0:maxr, 0:maxr, type="l")
sd.Pred <- sd(prediction.data.original$pred[0:maxr])
lines(0:maxr+sd.Pred, 0:maxr, type="l", col = "red")
lines(0:maxr-sd.Pred, 0:maxr, type="l", col = "red")
v = vector()
x = vector()
lun$events <- lun$events[order(lun$events, decreasing = TRUE)]
for (i in 1:length(prediction.data.original$pred)){
res <- mean(lun$events[0.05*(i-1) <= prediction.data.original$pred & prediction.data.original$pred < 0.05*i])
v = c(v, res)
x = c(x, 0.05*i)}
plot(x, v, xlim=c(0, maxr), ylim=c(0, maxr), xlab="Average predicted events", ylab="Average actual events")
lines(0:maxr,0:maxr, type="l")
